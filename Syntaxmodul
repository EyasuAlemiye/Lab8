#Syntaxkontroll

from wordqueue import WordQueue

#Tagen ur kodexempel i Föreläsning 13. Andra variablnamn
class Inkorrektmolekylformat(Exception): 
    pass


#Tagen ur kodexempel i Föreläsning 13. Andra variablnamn
def Kollagrammatiken(molekyl):
    q = lagraMolekylen(molekyl) 
    try:                                  
        readMolekyl(q)                 
        return "Formeln är syntaktiskt korrekt"     
    except Inkorrektmolekylformat as fel:                            
        return str(fel)  
   

def lagraMolekylen(molekyl): 
    
    q = WordQueue() #Skapar kö

    molekyl = list(molekyl)  
  
    for i in range(len(molekyl)):
        element=molekyl[i]
        try:
            korrektelement=int(element)  
            if isinstance(korrektelement,int):
                molekyl[i]=korrektelement
                continue
                
        except ValueError:
            continue
    
    #Tagen från kodexemplet ur Föreläsning 13. Andra variabelnamn
    for enhet in molekyl:
        q.enqueue(enhet) 
    q.enqueue("!")  
    return q
    


def readMolekyl(q): #Kontrollera
   
    readAtom(q)  
    if isinstance(q.peek(),int):
        readNum(q) 
    if isinstance(q.peek(),str) and q.peek()!='!':
        readletter(q) 
        readNum(q)
    if q.isEmpty():
        return

def readAtom(q):  
    readcapLetter(q) 
    try:
        provvariabel=int(q.peek()) 
        if isinstance(provvariabel,int): 
            readNum(q)
        else:
            pass
    except ValueError:
        if isinstance(q.peek(), str):
            if q.peek()!='!':
                readletter(q)

    
def readcapLetter(q):
    
    capLetter=q.dequeue()
    print(capLetter, ' Är det utprintade värdet')
    storbokstavlista=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
    if capLetter!='#':
        for capelement in storbokstavlista:
            if capLetter==capelement:
                return
        raise Inkorrektmolekylformat('Saknad stor bokstav vid radslutet ' + str(capLetter))   
        
    
def readletter(q):

    letter=q.dequeue() 
    storbokstavlista=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
    litenbokstavlista=[]
    for storbokstav in storbokstavlista:
        litenbokstav=storbokstav.lower()
        litenbokstavlista.append(litenbokstav)

        if letter==litenbokstav:
            return
    raise Inkorrektmolekylformat('Saknad liten bokstav vid radslutet: '+ str(letter))  
    
def readNum(q):

    nummer=q.dequeue() 
    if nummer==1 or q.peek()==1 or nummer==0:
        try:
            int(q.peek()) #kollar om 'peek()' går att omvandla till integer, om ja så concatenatas, annars hoppa ner.
            nummer2=q.dequeue()
            strnummer=str(nummer)
            strnummer2=str(nummer2)
            nummer=strnummer + strnummer2
            print(nummer, ' är det concatenerade värdet')
        except ValueError: 
            pass
        
    nummerlista=range(1,1000,1) #egentligen oändlig men sätter en gräns till 1000 s.a vi har en lista med heltal mellan 1 och 1000
    if nummer!='#':
        for heltal in nummerlista:
            try:
                
                if int(nummer)>=2 and int(nummer)==heltal and q.peek()=='!': 
                    return 
                
            except ValueError:
                pass

            if int(nummer)==1 or int(nummer)==0:  
                raise Inkorrektmolekylformat('För litet tal vid radslutet ') 
        


def main(): #Kodexempel från föreläsning 13. Andra variabelnamn.
    molekylen = input("Skriv en molekyl: ")  #Pb10
    utfallet = Kollagrammatiken(molekylen)
    print(utfallet)

if __name__ == "__main__":
    main()





