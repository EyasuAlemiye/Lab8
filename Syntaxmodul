#Syntaxkontroll

from wordqueue import WordQueue

class Molekylfel(Exception): 
    pass

#Tagen ur kodexempel i Föreläsning 13

def Kollagrammatiken(molekyl):
    q = lagraMolekylen(molekyl) 
    try:                                  
        readMolekyl(q)                 
        return "Följer syntaxen!"     
    except Molekylfel as fel:                            
        return str(fel)     

def lagraMolekylen(molekyl): 
    
    q = WordQueue() #Skapar kö

    molekyl = list(molekyl)  
  
    for i in range(len(molekyl)):
        element=molekyl[i]
        try:
            korrektelement=int(element)  
            if isinstance(korrektelement,int):
                molekyl[i]=korrektelement
                continue
                
        except ValueError:
            continue
    
    #Tagen från kodexemplet ur Föreläsning 13. Andra variabelnamn
    for enhet in molekyl:
        q.enqueue(enhet) 
    q.enqueue(".")  
    return q
    


def readMolekyl(q): #Mer eller mindre samma som kodexempel i föreläsningen
   
    readAtom(q)  
    if isinstance(q.peek(),int):
            readNum(q) 
    if isinstance(q.peek(),str) and q.peek()!='.':
            readletter(q) 
            readNum(q)
    if q.isEmpty():
            return

def readAtom(q):  
    readcapLetter(q) 
    try:
        provvariabel=int(q.peek()) 
        if isinstance(provvariabel,int): 
            readNum(q)
        else:
            pass
    except ValueError:
        if isinstance(q.peek(), str):
            if q.peek()!='.':
                readletter(q)

    
def readcapLetter(q):
    
    capLetter=q.dequeue()
    print(capLetter, ' Är det utprintade värdet')
    storbokstavlista=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
    for capelement in storbokstavlista:
        if capLetter==capelement:
            return
    raise Molekylfel('Saknad stor bokstav vid radslutet: ' + capLetter)   
    
    
def readletter(q):

    letter=q.dequeue() 
    storbokstavlista=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
    litenbokstavlista=[]
    for storbokstav in storbokstavlista:
        litenbokstav=storbokstav.lower()
        litenbokstavlista.append(litenbokstav)

        if letter==litenbokstav:
            return
    raise Molekylfel('Saknad liten bokstav vid radslutet: '+ letter)  
    
def readNum(q):

    nummer=q.dequeue() 
    if nummer==1 or q.peek()==1 or nummer==0:
        try:
            int(q.peek()) #kollar om 'peek()' går att omvandla till integer, om ja så concatenatas, annars hoppa ner.
            nummer2=q.dequeue()
            strnummer=str(nummer)
            strnummer2=str(nummer2)
            nummer=strnummer + strnummer2
            print(nummer, 'Konkatektenr')
        except ValueError: # '.'
            pass
        
    nummerlista=range(1,1000,1) #egentligen oändlig men sätter en gräns till 10^8 s.a vi har en lista med heltal mellan 1 och 10^8
    
    for heltal in nummerlista:
        try:
            #if q.peek()!='.':
            #    nummer2=q.dequeue()
               
            if int(nummer)>=2 and int(nummer)==heltal and q.peek()=='.': 
                return 
        except ValueError:
            pass

        if int(nummer)==1 or int(nummer)==0:  
            raise Molekylfel('För litet tal vid radslutet: '+ str(nummer))
    


def main(): #Kodexempel från föreläsning 13. Andra variabelnamn.
    molekylen = input("Skriv en molekyl: ")  #Pb10
    utfallet = Kollagrammatiken(molekylen)
    print(utfallet)

if __name__ == "__main__":
    main()





